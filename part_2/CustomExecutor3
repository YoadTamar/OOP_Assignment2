package com.company;

import java.util.concurrent.*;

public class CustomExecutor3 implements Executor{
    //int max = -1;

    /*
    1. submit - Task
    2. submit callable\Runnable , tasktype
    3. execute callable\Runnable
    - 6-9 done
    10. return the max priority in queue - cant use the queue
    11. shutdown

    - important: 2,3 must use method 1!!
     */

    private ThreadPoolExecutor threadPool = new ThreadPoolExecutor
            (Runtime.getRuntime().availableProcessors()/2 , Runtime.getRuntime().availableProcessors()-1,
                    300, TimeUnit.MILLISECONDS,
                    new PriorityBlockingQueue<Runnable>());

    public CustomExecutor3() {
        //empty
    }

    public <T> Future<T> submit(Task<T> task) {
        AdapterCall adapterCall = new AdapterCall<>(task , task.getTaskType().getPriorityValue());


    }
    @Override
    public void execute(Runnable command) {

    }
}
